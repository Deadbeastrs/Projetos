library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.numeric_std.all;

entity Scroll is
   port(flip       : in  std_logic;
        clk         : in  std_logic;
		  inload      : in std_logic_vector(6 downto 0);
		  result      : out std_logic_vector(27 downto 0);
        HEX0        : out std_logic_vector(6 downto 0);
		  HEX1        : out std_logic_vector(6 downto 0);
		  HEX2        : out std_logic_vector(6 downto 0);
		  HEX3        : out std_logic_vector(6 downto 0));
end Scroll;

architecture Behavioral of Scroll is
	signal s_result : std_logic_vector(27 downto 0);
	signal countWrite : integer range 0 to 3;
	
begin

   process(clk)
   begin
		if(rising_edge(clk)) then
		result <= s_result;
			if(flip = '1') then
				s_result(27 downto 7) <= s_result(20 downto 0);
				s_result(6 downto 0) <= inload(6 downto 0);
			end if;
			HEX0 <= s_result(6 downto 0);
			HEX1 <= s_result(13 downto 7);
			HEX2 <= s_result(20 downto 14);
			HEX2 <= s_result(27 downto 21);
		end if;
   end process;

end Behavioral;